import { Injectable } from '@angular/core';
import { AppService } from './app.service';
import { HttpClient } from '@angular/common/http';
import { Observable, of } from 'rxjs';
import { IExploitation } from '../interfaces/exploitation.interface';

@Injectable({
  providedIn: 'root',
})
export class ExploitationService {

  ExploitationDialogTitre = '';
  newExploitation: any = {};
  editedExploitation: any = {};
  deletedExploitation: any = {};
  //exploitations: IExploitation[] = [];
  exploitations = [];


  constructor(public http: HttpClient, private appService: AppService) {}
 token = this.appService.getLocalToken();

 getExploitation(id: number): Observable<any> {
  return this.http.get(
    this.appService.getUrl(
      '/exploitations/'+ id
    ),
    this.token
  );
}

  getExploitations(): Observable<any> {
    return this.http.get(
      this.appService.getUrl(
        '/exploitations'
      ),
      this.token
    );
  }

  getAllCustomExploitationToOp(id: number): Observable<any> {
    return this.http.get(
      this.appService.getUrl(
        '/exploitations/custom/clientId/'+ id
      ),
      this.token
    );
  }


  getAllCustom(): Observable<any> {
    return this.http.get(
      this.appService.getUrl(
        '/exploitations/custom/'
      ),
      this.token
    );
  }
  create(exploitation: IExploitation): Observable<any> {
      let body: any = {};
      console.log(exploitation);
      body.id = null;
      body.compte = exploitation.compte;
      body.dateExploitation = exploitation.date;
      body.unite = exploitation.unite;
      body.surface = exploitation.surface;
      body.varieteId = exploitation.variete.id;
      body.anneeId = exploitation.annee.id;
      body.saisonId = exploitation.saison.id;
      body.opId = exploitation.op.id;
      
        return this.http.post(
          this.appService.getUrl(
            '/exploitations/create'
          ),
          body,
          this.token
        );


  }
  update(exploitation: IExploitation): Observable<any> {
      let body: any = {};
      body.id = exploitation.id;
      body.compte = exploitation.compte;
      body.date = exploitation.date;
      body.unite = exploitation.unite;
      body.surface = exploitation.surface;
      //body.isAchat = exploitation.isAchat ;
      body.varieteId = exploitation.varieteId;
      body.anneeId = exploitation.anneeId;
      body.saisonId = exploitation.saisonId;
      body.producteurId = exploitation.producteurId;
      body.opId = exploitation.opId;

        return this.http.put(
          this.appService.getUrl(
            '/exploitations/update/' + exploitation.id
          ),
          body,
          this.token
        );

  }

  delete(exploitation: IExploitation): Observable<any> {
      return this.http.delete(
        this.appService.getUrl(
          '/exploitations/delete/' + exploitation.id
        ),
        this.token
      );
  }


}
