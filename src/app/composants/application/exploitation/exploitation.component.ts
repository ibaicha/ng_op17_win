import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { LoginService } from '../../../services/login.service';
import { Store, select } from '@ngrx/store';
import * as fromExploitations from '../../../store/exploitation';
import { Observable, Subscription } from 'rxjs';
import { IExploitationCustom } from '../../../interfaces/exploitation.interface';

@Component({
  selector: 'app-exploitation',
  standalone: true,
  imports: [CommonModule],
  templateUrl: './exploitation.component.html',
  styleUrls: ['./exploitation.component.css']
})
export class ExploitationComponent {

  exploitations$!: Observable<IExploitationCustom[]>;
  private creditsSubscription: Subscription | undefined;
  exploitations: IExploitationCustom[] = [];
  exploitation: any = {};
  selectedExploitations: IExploitationCustom[] | undefined;
  isLoading$: Observable<boolean> | undefined;

  constructor(
    private readonly store: Store,
    public loginService: LoginService,
  ) {
 
   }

  ngOnInit() {
    console.log('this.loginService.exploitationId: ', this.loginService.exploitationId);
    this.initDispatch();

  }

  private initDispatch(): void {
    this.store.dispatch(fromExploitations.getExploitations());
/*
    this.exploitation  = this.store.dispatch(
      fromExploitations.getExploitationCustom( {id:this.loginService.exploitationId })
    );
    console.log('exploitation: ', this.exploitation);
    */
    /*
    this.store.pipe(
      select(
        fromExploitations.selectExploitationCustomById(
          this.loginService.exploitationId
        )
      )
    ).subscribe((data: any) => {
      if (data) {
        this.exploitation = data;
        console.log('exploitations composant: ', this.exploitation);
      }
    });

 */
    this.store.pipe().subscribe((data: any) => {
      if (data) {
        this.exploitations = data;
        console.log('exploitations composant: ', this.exploitations);
      }
    })




  }

}
