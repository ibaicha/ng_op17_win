import { createAction, props } from '@ngrx/store';
import { IChargeExploitation } from '../../interfaces/exploitation.interface';

const prefix = '[ChargeExploitations]';

export const getChargeExploitation = createAction(
    `${prefix} get ChargeExploitation`,
    props<{
        id: number;
    }>()
);
export const getChargeExploitationSuccess = createAction(
    `${getChargeExploitation.type} Success`,
    props<{
        oneChargeExploitation: IChargeExploitation;
    }>()
);

export const getChargeExploitations = createAction(
    `${prefix} Get ChargeExploitations`);
export const getChargeExploitationsSuccess = createAction(
    `${getChargeExploitations.type} Success`,
    props<{
        chargeExploitations: IChargeExploitation[];
    }>()
);

export const createChargeExploitation = createAction(
    `${prefix} Create ChargeExploitation`,
    props<{
        chargeExploitation: IChargeExploitation;
    }>()
);

export const createChargeExploitationSuccess = createAction(
    `${createChargeExploitation.type} Success`,
    props<{
        chargeExploitation: IChargeExploitation;
    }>()
);

export const updateChargeExploitation = createAction(
    `${prefix} Update ChargeExploitation`,
    props<{
        chargeExploitation: IChargeExploitation;
    }>()
);

export const updateChargeExploitationSuccess = createAction(
    `${updateChargeExploitation.type} Success`,
    props<{
        chargeExploitation: IChargeExploitation;
    }>()
);

export const deleteChargeExploitation = createAction(
    `${prefix} Delete ChargeExploitation`,
    props<{
        chargeExploitation: IChargeExploitation;
    }>()
);
export const deleteChargeExploitationSuccess = createAction(
    `${deleteChargeExploitation.type} Success`,
    props<{
        chargeExploitation: IChargeExploitation;
    }>()
);
